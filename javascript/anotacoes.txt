Javascript

<script>
     alert("Olá mundo");
     console.log("Eu estou aqui");
</script>

o alert irá exibir um mensagem em forma de pop-up na página.
o console.log irá exibir a mensagem em seu parâmetro no console do desenvolvedor.

- document e document.querySelector -
O document serve para mostrar a estrutura do seu código no console.log. Ela é a representação do DOM ou Document Object Model, que é a representação da nossa página HTML para o navegador, que é utilizada pelo Javascript para manipular a página.
O querySelector é útil para buscar e selecionar uma tag específica no seu documento.
querySelectorAll - irá selecionar todos os elementos com o mesmo id ou class do parâmetro.

Obs: É importante manter a tag script e o seu conteúdo no final da página. para que em nenhum momento dê "nulo" devido a alguma falha de carregamento da página.

var.toFixed(numerocasadeciaml) - permite escolher quantas casas decimais prefere que seja mostrado.

objeto.classList.add("nova-classe") - esta função permite criar uma nova classe no objeto selecionado. é muito útil para aplicar estilos do css em elementos.

Atrelando eventos a objetos

nomeobjeto.addEventListener("click", mostraMensagem); +
function mostraMensagem(){
    console.log("Fui clicado");
}

Este pequeno código atribui uma ação ao objeto "nomeobjeto" quando ele é clicado, a ação em questão é a função mostraMensagem que é executado mostrando a mensagem "Fui clicado" no console do desenvolvedor.

event.preventDefault() - faz com que o comportamento padrão de um objeto pare de funcionar para que você diga o que ele deve fazer. O button foi o exemplo usado.

var coluna = document.createElement("td"); - permite você criar um novo elemento da sua escolha (dentro dos parênteses) no javascript

linha.appendChild(coluna) - permite atribuir o elemento que você acabou de criar a algum objeto já criado em seu HTML.

Selecionar os valores dos campos de um questionário:

var form = document.querySelector("#formulario");
 var info1 = form.name.value

- Crie a variavel da informação, coloque o nome da variavel da qual vc esta pegando as informações. coloque o "name" da informação e em seguida "value".
Obs: ao que tudo indica esse tipo de seleção é uma característica exclusiva da tag form.

Declaração de objetos

var xicara = {
    cor: "azul",
    peso: 125,
    tipo: "chá"
};

Acessamos as informações do objeto da seguinte forma:

xicara.cor // azul
xicara.peso // 125
xicara.tipo // chá
xicara.modelo // undefined, este objeto não possui a propriedade modelo

innerHTML

Com a propriedade innerHTML, podemos editar obter o conteúdo HTML (HTML interno) de um elemento.

Para editar o HTML interno, como o innerHTML é uma propriedade, utilizamos um sinal de igual (=). Fazemos:

ObjetoDeUmElementoHTML.innerHTML = "Novo conteúdo"

E para obter o HTML interno, fazemos:

ObjetoDeUmElementoHTML.innerHTML

O seu retorno será todo o conteúdo HTML, tanto tags, atributos, classes, etc, no formato de uma String.

this.remove(); - remove o dono do evento em questão.

var expressao = new RegExp() - mecânismo de busca no javascript que funciona da seguinte forma: 

- o primeiro parâmetro que devemos passar para o construtor é o padrão (o texto da expressão regular, o que deve ser buscado)
- o segundo parâmetro são uma ou mais flags (representando como queremos que a expressão regular busque).
- Por exemplo, podemos definir que não queremos que haja distinção entre letras maiúsculas e minúsculas, através da flag i.

var xhr = new XMLHttpRequest();

O objeto XMLHttpRequest é quem é responsável por fazer requisições HTTP assíncronas com Javascript. Apesar de ter o XML no nome hoje em dia este objeto pode trafegar diversos outros tipos de dados além do XML, este nome só se manteve devido a um legado histórico.


